version: '3.9'

services:
  django:
    image: spectech_docker:latest
    container_name: django
    volumes:
      - static_volume:/spectech/static
      - media_volume:/spectech/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - VIRTUAL_HOST=${ALLOWED_HOST}
      - LETSENCRYPTS_HOST=${ALLOWED_HOST}
    command: >
      bash -c "./manage.py collectstatic --noinput && ./manage.py migrate && gunicorn -b 0.0.0.0:8000 spectech.wsgi:application"
    depends_on:
      - db
      - redis
    networks:
      - nginx_network
  db:
    container_name: postgre_db
    image: postgres:15
    volumes:
      - db_data::/var/lib/postresql/data
    env_file:
      - .env
    networks:
      - nginx_network
  redis:
    image: "redis:5.0.7"
    ports:
      - "6379:6379"
    networks:
      - nginx_network
  nginx:
    build:
      dockerfile: ./Dockerfile
      context: ./docker/nginx/
    container_name: spectech_nginx
    image: spectech_nginx
    volumes:
      - static_volume:/spectech/static
      - media_volume:/spectech/media
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - django
    ports:
      - "${NGINX_EXTERNAL_PORT}:80"
      - "${NGINX_EXTERNAL_SSL_PORT}:443"
    networks:
      - nginx_network

networks:
  nginx_network:
    driver: bridge

volumes:
  db_data:
  static_volume:
  media_volume:
  certs:
  vhost:
  html:
